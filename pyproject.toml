[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "knowledge-gains"
version = "1.0.0"
description = "Science-based weightlifting app with AI agents for personalized workout programs"
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
authors = [
    { name = "Knowledge Gains Team" },
]
keywords = ["fitness", "weightlifting", "ai", "workout", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Scientific/Engineering",
    "Topic :: Other/Nonlisted Topic",
]

# Core dependencies
dependencies = [
    # Core framework
    "fastapi>=0.104.1,<0.110.0",
    "uvicorn[standard]>=0.24.0,<0.25.0",
    "jinja2>=3.1.2,<3.2.0",
    "python-multipart>=0.0.6,<0.1.0",
    
    # Database and authentication
    "supabase>=2.0.2,<3.0.0",
    "asyncpg>=0.30.0,<0.31.0",
    
    # AI and OpenAI
    "openai>=1.3.7,<2.0.0",
    "pydantic>=2.5.0,<3.0.0",
    
    # File processing
    "aiofiles>=23.2.1,<24.0.0",
    "PyPDF2>=3.0.1,<4.0.0",
    "python-docx>=1.1.0,<2.0.0",
    
    # Web scraping and HTTP
    "aiohttp>=3.9.1,<4.0.0",
    "requests>=2.31.0,<3.0.0",
    "beautifulsoup4>=4.12.2,<5.0.0",
    
    # Environment and configuration
    "python-dotenv>=1.0.0,<2.0.0",
]

# Optional dependencies
[project.optional-dependencies]
dev = [
    # Development tools
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    
    # Testing utilities
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
]

ml = [
    # Machine learning enhancements
    "pandas>=2.1.4,<3.0.0",
    "numpy>=1.26.2,<2.0.0",
    "scikit-learn>=1.3.2,<2.0.0",
    "matplotlib>=3.8.0,<4.0.0",
    "seaborn>=0.13.0,<1.0.0",
]

image = [
    # Image processing
    "pillow>=10.1.0,<11.0.0",
    "opencv-python>=4.8.0,<5.0.0",
]

all = [
    "knowledge-gains[dev,ml,image]"
]

[project.urls]
Homepage = "https://github.com/your-username/knowledge-gains"
Documentation = "https://github.com/your-username/knowledge-gains#readme"
Repository = "https://github.com/your-username/knowledge-gains"
Issues = "https://github.com/your-username/knowledge-gains/issues"

[project.scripts]
knowledge-gains = "main:app"

# Tool configurations
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agents", "database"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "PyPDF2.*",
    "docx.*",
    "beautifulsoup4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["agents", "main"]
omit = [
    "tests/*",
    "venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build.targets.wheel]
packages = ["agents", "database"]
include = [
    "main.py",
    "templates/**/*",
]

[tool.flake8]
exclude = [".venv", "build", "dist", "*.egg-info"]
extend-ignore = ["E501"]

[dependency-groups]
dev = [
    "types-requests>=2.32.4.20250611",
]
